--SET hive.execution.engine=mr;
set mapreduce.map.memory.mb=3072;
set mapreduce.reduce.memory.mb=3072;
set mapred.max.split.size=64000000;
set mapred.reduce.tasks=799;

add jar s3n://musically-bigdata/recommend_script/udf/log/recommend-offline-0.1.jar;
create temporary function make_item_list as 'net.vickymedia.recommend.udf.primary.MakeItemList';
create temporary function merge_action_list_cumulative as 'net.vickymedia.recommend.udf.primary.MergeActionListCumulative';
create temporary function format_like_list as 'net.vickymedia.recommend.udf.log.FormatLikeList';
create temporary function regexp_count as 'net.vickymedia.recommend.udf.util.RegexpCount';
create temporary function split_part as 'net.vickymedia.recommend.udf.util.SplitPart';
create temporary function trans_array as 'net.vickymedia.recommend.udf.util.TransArray';

create EXTERNAL table if not exists uid2i_action_table_for_i2i_test
(
   utdid string,
   item_list string comment "format: musical_id,author_id,action_type,action_cnt,promote_time,time,index_time"
)
partitioned by(dt string)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t'
STORED AS TEXTFILE
location 's3n://musically-bigdata/recommend_script/data/i2i_old_test/uid2i_action_table_for_i2i_test/';
;

alter table uid2i_action_table_for_i2i_test add if not exists
partition(dt=${hiveconf:yesterday})
;

insert overwrite table uid2i_action_table_for_i2i_test partition(dt=${hiveconf:today})
select
   COALESCE(E.utdid, D.utdid) as utdid,
   case
      when E.item_list is NULL then D.item_list
      when D.item_list is NULL then E.item_list
   else merge_action_list_cumulative(E.item_list, D.item_list,90)
   end as item_list
from
(
select
   utdid,
   item_list
from
   uid2i_action_table_for_i2i_test
where
   dt=${hiveconf:yesterday} and length(item_list) > 0
   and REGEXP_COUNT(split_part(item_list,"\\;",1),",")=7
)E
full outer join
(
select
   cast(userid as string) utdid,
   make_item_list(A.musical_id,author_id,action_type,promote_time,time,index_time) as item_list
from
(
select
   userid,
   musical_id,
   4 as action_type,
   time
from
   musical_like_action_all
where
   dt >= ${hiveconf:startday}
   and dt<= ${hiveconf:endday} 
   and userid > 0
)A
join
(
select
   musical_id,
   user_id as author_id,
   case promote_type
      when 0 then 0
      else promote_time
   end as promote_time,
   cast(index_time as bigint) index_time
from
musical
where
dt=20171108 and musical_id > 0 and user_id>0 and status=2
)C
on
A.musical_id = C.musical_id where A.userid != C.author_id
group by userid
having
   length(item_list) > 0
)D
on D.utdid = E.utdid
;
